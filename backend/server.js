// backend/server.js
import dotenv from 'dotenv';
dotenv.config();

import express from 'express';
import mongoose from 'mongoose';
import cors from 'cors';
import path from 'path';

// ‚îÄ‚îÄ‚îÄ Import only the routes that actually exist ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// (Make sure these files are present in `backend/routes/`!)
import authRoutes from './routes/authRoutes.js';
import taskRoutes from './routes/tasks.js';

// If/when you create these route‚Äêfiles, you can uncomment them:
// import messageRoutes   from './routes/messageRoutes.js';
// import userRoutes      from './routes/userRoutes.js';
// import workspaceRoutes from './routes/workspaceRoutes.js';

const app = express();

// ‚îÄ‚îÄ‚îÄ Global Middleware ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
app.use(cors());
app.use(express.json());

// If you ever add file‚Äêuploads (images, attachments), you can serve them statically.
// For now we‚Äôll leave this commented out:
// app.use('/uploads', express.static(path.join(process.cwd(), 'uploads')));

// ‚îÄ‚îÄ‚îÄ Mount ‚Äúpublic‚Äù routes (no auth required) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
app.use('/api/auth', authRoutes);

// ‚îÄ‚îÄ‚îÄ Mount ‚Äúprotected‚Äù routes (after you implement a JWT or session middleware) ‚îÄ
app.use('/api/tasks', taskRoutes);

// Later, once you create these files, un‚Äêcomment them:
// app.use('/api/messages', messageRoutes);
// app.use('/api/users',    userRoutes);
// app.use('/api/workspaces', workspaceRoutes);

// ‚îÄ‚îÄ‚îÄ Health Check Endpoint (optional) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
app.get('/api/health', (_req, res) => {
  res.json({ status: 'OK' });
});

// ‚îÄ‚îÄ‚îÄ Connect to MongoDB & Start Listening ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
const PORT = process.env.PORT || 5005;
const MONGO = process.env.MONGO_URI;

mongoose
  .connect(MONGO)
  .then(() => {
    console.log('‚úÖ Connected to MongoDB');
    app.listen(PORT, () => {
      console.log(`üöÄ Server running on http://localhost:${PORT}`);
    });
  })
  .catch((err) => {
    console.error('‚ùå MongoDB connection error:', err);
    process.exit(1);
  });
